
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'HelloWorld', 'HelloWorld', 1, 13).
program(2, 'print_greeting', 'HelloWorld.print_greeting', 6, 12).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'provided_greeting', 'HelloWorld<-provided_greeting', 3, 1).
port(2, 'out', 'displayed_greeting', 'HelloWorld->displayed_greeting', 4, 2).
port(3, 'in', 'greeting', 'HelloWorld.print_greeting<-greeting', 8, 3).
port(4, 'out', 'displayed_greeting', 'HelloWorld.print_greeting->displayed_greeting', 10, 4).

% FACT: port_alias(port_id, alias).
port_alias(3, 'provided_greeting').

% FACT: port_uri_template(port_id, uri).
port_uri_template(4, 'stream:stdout').

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(2, 3).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 2).
has_out_port(2, 4).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'provided_greeting', '[provided_greeting]').
data(2, 'displayed_greeting', '[displayed_greeting]').
data(3, 'provided_greeting', 'HelloWorld[provided_greeting]').
data(4, 'displayed_greeting', 'HelloWorld[displayed_greeting]').

% FACT: channel(channel_id, data_id).
channel(1, 2).
channel(2, 3).
channel(3, 1).
channel(4, 4).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(4, 1).
port_connects_to_channel(3, 2).
port_connects_to_channel(3, 3).
port_connects_to_channel(4, 4).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 2).
inflow_connects_to_channel(1, 3).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(2, 1).
outflow_connects_to_channel(2, 4).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).
